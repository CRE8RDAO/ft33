type DailyBond @entity {
  id: ID!
  timestamp: BigInt!
  token: Token!
  amount: BigDecimal!
  value: BigDecimal!
}

type Brickie @entity {
  id: ID!
  bondDeposits: [Deposit!]! @derivedFrom(field: "brickie")
  bondRedemptions: [Redemption!]! @derivedFrom(field: "brickie")
  stakeTransactions: [Stake!]! @derivedFrom(field: "brickie")
  unstakeTransactions: [Unstake!]! @derivedFrom(field: "brickie")
  historicBalance: [BrickieBalance!]! @derivedFrom(field: "brickie")
  lastBalance: BrickieBalance
  active: Boolean!
}

type BrickieBalance @entity {
  id: ID!
  brickie: Brickie!
  sbrickBalance: BigDecimal!
  brickBalance: BigDecimal!
  bondBalance: BigDecimal!
  dollarBalance: BigDecimal!
  stakes: [ContractInfo!]
  bonds: [ContractInfo!]
  timestamp: BigInt!
}

type Deposit @entity {
  id: ID!
  transaction: Transaction!
  brickie: Brickie!
  amount: BigDecimal!
  maxPremium: BigDecimal!
  token: Token!
  value: BigDecimal!
  timestamp: BigInt!
}

type Redemption @entity {
  id: ID!
  transaction: Transaction
  brickie: Brickie
  token: Token
  timestamp: BigInt
}

type Stake @entity {
  id: ID!
  transaction: Transaction!
  brickie: Brickie!
  amount: BigDecimal!
  timestamp: BigInt!
}

type Unstake @entity {
  id: ID!
  transaction: Transaction!
  brickie: Brickie!
  amount: BigDecimal!
  timestamp: BigInt!
}

type Rebase @entity {
  id: ID!
  transaction: String!
  amount: BigDecimal!
  stakedBricks: BigDecimal!
  percentage: BigDecimal!
  contract: String!
  timestamp: BigInt!
  value: BigDecimal!
}

type DailyStakingReward @entity {
  id: ID!
  timestamp: BigInt!
  amount: BigDecimal!
  value: BigDecimal!
}

type Transaction @entity {
  id: ID!
  timestamp: BigInt!
  blockNumber: BigInt!
  blockHash: Bytes!
  from: Bytes!
  to: Bytes
  value: BigInt!
  gasLimit: BigInt!
  gasPrice: BigInt!
}

type Token @entity {
  id: ID!
}

type ProtocolMetric @entity {
  id: ID!
  timestamp: BigInt!
  brickCirculatingSupply: BigDecimal!
  sBrickCirculatingSupply: BigDecimal!
  totalSupply: BigDecimal!
  brickPrice: BigDecimal!
  marketCap: BigDecimal!
  totalValueLocked: BigDecimal!
  treasuryRiskFreeValue: BigDecimal!
  treasuryMarketValue: BigDecimal!
  nextEpochRebase: BigDecimal!
  nextDistributedBrick: BigDecimal!
  treasuryFraxRiskFreeValue: BigDecimal!
  treasuryWETHRiskFreeValue: BigDecimal!
  treasuryFraxMarketValue: BigDecimal!
  treasuryWETHMarketValue: BigDecimal!
  currentAPY: BigDecimal!
  runway2dot5k: BigDecimal
  runway5k: BigDecimal
  runway7dot5k: BigDecimal
  runway10k: BigDecimal
  runway20k: BigDecimal
  runway50k: BigDecimal
  runway70k: BigDecimal
  runway100k: BigDecimal
  runwayCurrent: BigDecimal
  treasuryBrickFraxPOL: BigDecimal!
  holders: BigInt!
}

type ContractInfo @entity {
  id: ID!
  name: String
  contract: String
  amount: BigDecimal
}

type Aux @entity {
  id: ID!
  value: BigInt!
}

type BondDiscount @entity {
  id: ID!
  timestamp: BigInt!
  frax_discount: BigDecimal!
  brickfrax_discount: BigDecimal!
  eth_discount: BigDecimal!
}